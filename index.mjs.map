{"version":3,"file":"index.mjs","sources":["../lib/ndarray.js","../lib/accessors.js","../lib/main.js","../lib/index.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2025 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport arraylike2object from '@stdlib/array-base-arraylike2object';\nimport accessors from './accessors.js';\n\n\n// MAIN //\n\n/**\n* Returns the first index of a specified search element in a strided array using alternative indexing semantics.\n*\n* @param {PositiveInteger} N - number of indexed elements\n* @param {*} searchElement - search element\n* @param {Collection} x - input array\n* @param {integer} strideX - stride length\n* @param {NonNegativeInteger} offsetX - starting index\n* @returns {integer} index\n*\n* @example\n* var x = [ -2.0, 1.0, 3.0, -5.0, 4.0, 0.0, -1.0, 3.0 ];\n*\n* var idx = gindexOf( x.length, 3.0, x, 1, 0 );\n* // returns 2\n*/\nfunction gindexOf( N, searchElement, x, strideX, offsetX ) {\n\tvar ix;\n\tvar o;\n\tvar i;\n\n\tif ( N <= 0 ) {\n\t\treturn -1;\n\t}\n\to = arraylike2object( x );\n\tif ( o.accessorProtocol ) {\n\t\treturn accessors( N, searchElement, o, strideX, offsetX );\n\t}\n\tix = offsetX;\n\tfor ( i = 0; i < N; i++ ) {\n\t\tif ( x[ ix ] === searchElement ) {\n\t\t\treturn i;\n\t\t}\n\t\tix += strideX;\n\t}\n\treturn -1;\n}\n\n\n// EXPORTS //\n\nexport default gindexOf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2025 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns the first index of a specified search element in a strided array.\n*\n* @private\n* @param {PositiveInteger} N - number of indexed elements\n* @param {*} searchElement - search element\n* @param {Object} x - input array object\n* @param {Collection} x.data - input array data\n* @param {Array<Function>} x.accessors - array element accessors\n* @param {integer} strideX - stride length\n* @param {NonNegativeInteger} offsetX - starting index\n* @returns {integer} index\n*\n* @example\n* import toAccessorArray from '@stdlib/array-base-to-accessor-array';\n* import arraylike2object from '@stdlib/array-base-arraylike2object';\n*\n* var x = [ -2.0, 1.0, 3.0, -5.0, 4.0, 0.0, -1.0, -3.0 ];\n*\n* var idx = gindexOf( x.length, 3.0, arraylike2object( toAccessorArray( x ) ), 1, 0 );\n* // returns 2\n*/\nfunction gindexOf( N, searchElement, x, strideX, offsetX ) {\n\tvar xbuf;\n\tvar get;\n\tvar ix;\n\tvar i;\n\n\t// Cache reference to array data:\n\txbuf = x.data;\n\n\t// Cache a reference to the element accessors:\n\tget = x.accessors[ 0 ];\n\n\tix = offsetX;\n\tfor ( i = 0; i < N; i++ ) {\n\t\tif ( get( xbuf, ix ) === searchElement ) {\n\t\t\treturn i;\n\t\t}\n\t\tix += strideX;\n\t}\n\treturn -1;\n}\n\n\n// EXPORTS //\n\nexport default gindexOf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2025 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport stride2offset from '@stdlib/strided-base-stride2offset';\nimport ndarray from './ndarray.js';\n\n\n// MAIN //\n\n/**\n* Returns the first index of a specified search element in a strided array.\n*\n* @param {PositiveInteger} N - number of indexed elements\n* @param {*} searchElement - search element\n* @param {Collection} x - input array\n* @param {integer} strideX - stride length\n* @returns {integer} index\n*\n* @example\n* var x = [ -2.0, 1.0, 3.0, -5.0, 4.0, 0.0, -1.0, 3.0 ];\n*\n* var idx = gindexOf( x.length, 3.0, x, 1 );\n* // returns 2\n*/\nfunction gindexOf( N, searchElement, x, strideX ) {\n\treturn ndarray( N, searchElement, x, strideX, stride2offset( N, strideX ) );\n}\n\n\n// EXPORTS //\n\nexport default gindexOf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2025 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return the first index of a specified search element in a strided array.\n*\n* @module @stdlib/blas-ext-base-gindex-of\n*\n* @example\n* import gindexOf from '@stdlib/blas-ext-base-gindex-of';\n*\n* var x = [ -2.0, 1.0, 3.0, -5.0, 4.0, 0.0, -1.0, 3.0 ];\n*\n* var idx = gindexOf( x.length, 3.0, x, 1 );\n* // returns 2\n*\n* @example\n* import gindexOf from '@stdlib/blas-ext-base-gindex-of';\n*\n* var x = [ -2.0, 1.0, 3.0, -5.0, 4.0, 0.0, -1.0, 3.0 ];\n*\n* var idx = gindexOf.ndarray( x.length, 3.0, x, 1, 0 );\n* // returns 2\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils-define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport ndarray from './ndarray.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'ndarray', ndarray );\n\n\n// EXPORTS //\n\nexport default main;\n"],"names":["gindexOf","N","searchElement","x","strideX","offsetX","ix","o","i","arraylike2object","accessorProtocol","xbuf","get","data","accessors","ndarray","stride2offset","setReadOnly","main"],"mappings":";;mUA4CA,SAASA,EAAUC,EAAGC,EAAeC,EAAGC,EAASC,GAChD,IAAIC,EACAC,EACAC,EAEJ,GAAKP,GAAK,EACT,OAAQ,EAGT,IADAM,EAAIE,EAAkBN,IACfO,iBACN,OCVF,SAAmBT,EAAGC,EAAeC,EAAGC,EAASC,GAChD,IAAIM,EACAC,EACAN,EACAE,EASJ,IANAG,EAAOR,EAAEU,KAGTD,EAAMT,EAAEW,UAAW,GAEnBR,EAAKD,EACCG,EAAI,EAAGA,EAAIP,EAAGO,IAAM,CACzB,GAAKI,EAAKD,EAAML,KAASJ,EACxB,OAAOM,EAERF,GAAMF,CACN,CACD,OAAQ,CACT,CDVSU,CAAWb,EAAGC,EAAeK,EAAGH,EAASC,GAGjD,IADAC,EAAKD,EACCG,EAAI,EAAGA,EAAIP,EAAGO,IAAM,CACzB,GAAKL,EAAGG,KAASJ,EAChB,OAAOM,EAERF,GAAMF,CACN,CACD,OAAQ,CACT,CErBA,SAASJ,EAAUC,EAAGC,EAAeC,EAAGC,GACvC,OAAOW,EAASd,EAAGC,EAAeC,EAAGC,EAASY,EAAef,EAAGG,GACjE,CCMAa,EAAAC,EAAA,UAAAH"}